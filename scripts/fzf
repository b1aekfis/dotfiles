#!/bin/sh

__FDC_stash=$FZF_DEFAULT_COMMAND
__FDO_stash=$FZF_DEFAULT_OPTS

__fzf__jump() {
    export FZF_DEFAULT_COMMAND="fd --type d --hidden --follow"
    export FZF_DEFAULT_OPTS=$(echo "$__FDO_stash" | sed 's/--multi//')
    dir=$(eval "$FZF_DEFAULT_COMMAND" | fzf)
    __fzf__jump_ec=$?
    export FZF_DEFAULT_COMMAND=$__FDC_stash
    export FZF_DEFAULT_OPTS=$__FDO_stash

    [ -z "$dir" ] || cd "$dir"
    unset dir
    return $__fzf__jump_ec
}

__fzf__jump_around_worktree() {
  if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then

    git_root=$(git rev-parse --show-toplevel)

    export FZF_DEFAULT_COMMAND="fd --type d --hidden --follow"
    export FZF_DEFAULT_OPTS=$(echo "$__FDO_stash" | sed 's/--multi//')
    dir=$(eval "$FZF_DEFAULT_COMMAND . \"$git_root\"" \
      | sed "s|^$git_root/||" \
      | fzf)
    __fzf__jump_around_worktree_ec=$?
    export FZF_DEFAULT_COMMAND=$__FDC_stash
    export FZF_DEFAULT_OPTS=$__FDO_stash

    [ -z "$dir" ] || cd "$git_root/$dir"
    unset git_root dir
    return $__fzf__jump_around_worktree_ec
  fi
}

__fzf__open_files_around_worktree() {
  if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    git_root=$(git rev-parse --show-toplevel)
    lfiles=$(git ls-files --exclude-standard --cached --others --full-name "$git_root" | fzf --preview "bat --color=always --plain \"$git_root\"/{}")
    __fzf__open_files_around_worktree_ec=$?
    [ -z "$lfiles" ] || { 
      cwd=$(pwd)
      cd "$git_root"
      if xargs -0 </dev/null >/dev/null 2>&1; then
        printf "%s" "$lfiles" | tr '\n' '\0' | xargs -0 -o $@
      else
        printf "%s" "$lfiles" | xargs -o $@
      fi
      cd "$cwd"
      unset cwd
    }
    unset git_root lfiles
    return $__fzf__open_files_around_worktree_ec
  fi
}
